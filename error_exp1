node main(x:int; a:int) returns (s, v, m:int)
var b : bool; t : int;
let
    t, b = (1 -> pre t + 1, true -> not (pre b));
    v, s = (1, 1) -> add1(pre s);
    m = 1 -> complex(a) when b;
tel

node add1(x:int) returns (y, z:int)
let
    y = x + 1;
    z = y + 1;
tel

node complex(z:int) returns (k:int)
let
    k = 1 -> add(z, pre z);
tel

node add(x:int; y:int) returns (sum:int)
let
    sum = x + y;
tel

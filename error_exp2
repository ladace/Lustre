node main(x:int; y:int) returns (result:int)
var b : bool; tmp : int;
let
    b = 1 -> (not b);
    tmp = 0 -> (pre x) + (pre y) - x;
    result = 1 -> complex(tmp, y); 
tel


node complex(x:int; y:int) returns (s:int)
var b : bool;
let
    b = 1 -> (not b);
    s = if b then add(x, y)
        else mul(x, y);
tel

node add(x:int; y:int) returns (s:int)
let
    s = x + y;
tel

node mul(x:int; y:int) returns (s:int)
let
    s = x * y;
tel
